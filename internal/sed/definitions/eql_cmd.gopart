// EQL_CMD //
type eql_cmd struct {
	addr *address
}

func (c *eql_cmd) match(line []byte, lineNumber int) bool {
	return c.addr.match(line, lineNumber)
}

func (c *eql_cmd) String() string {
	if c != nil && c.addr != nil {
		return fmt.Sprintf("{= command addr: %s}", c.addr.String())
	}
	return fmt.Sprint("{= command}")
}

func (c *eql_cmd) processLine(s *Sed) (bool, error) {
	fmt.Fprintf(os.Stdout, "\n%d\n", s.lineNumber)
	return false, nil
}

func NewEqlCmd(pieces [][]byte, addr *address) (*eql_cmd, error) {
	if len(pieces) > 1 {
		return nil, WrongNumberOfCommandParameters
	}
	cmd := new(eql_cmd)
	cmd.addr = addr
	return cmd, nil
}
// E-OF: EQL_CMD //
