// B_CMD // As defined in: https://man.cat-v.org/unix_10th/1/sed#:~:text=(2)b%20label,the%20end%20of%20the%20script. // PERMALINK: https://web.archive.org/web/20240730163415/https://man.cat-v.org/unix_10th/1/sed#:~:text=(2)b%20label,the%20end%20of%20the%20script.
type b_cmd struct {
	addr  *address
	label string
}

func (c *b_cmd) match(line []byte, lineNumber int) bool {
	return c.addr.match(line, lineNumber)
}

func (c *b_cmd) String() string {
	if c != nil {
		if c.addr != nil {
			return fmt.Sprintf("{b command label: %s Cmd addr:%s}", c.label, c.addr.String())
		}
		return fmt.Sprintf("{b command label: %s Cmd}", c.label)
	}
	return fmt.Sprintf("{b command}")
}

func (c *b_cmd) processLine(s *Sed) (bool, error) {
	return true, NotImplemented
}

func NewBCmd(pieces [][]byte, addr *address) (*b_cmd, error) {
	if len(pieces) != 1 {
		return nil, WrongNumberOfCommandParameters
	}
	cmd := new(b_cmd)
	cmd.addr = addr
	cmd.label = string(bytes.TrimSpace(pieces[0][1:]))
	return cmd, nil
}
// E-OF: B_CMD //
